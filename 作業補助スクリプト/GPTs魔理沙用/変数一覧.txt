seesaawiki.jp
変数一覧（Emueraとeramaker1）その１ - eratohoまとめ V3
8–11 分

　このページに記してあることは実はeramaker変数情報や、eramakerまとめWikiや本家サイトの「改変のための情報」やEmueraWikiなどに記述されていることの一部をまとめたものに過ぎない。よって既に知っているひとには目新しい記述はないので注意のこと。なおeramaker2はここでは取り扱わない。それは変数的にはeramaker1とは互換性はない（もちろん互換性に配慮はされてはいるが）、またここでのEmueraは現状での最新私家版1738eに準じている。
　また、eramaker1は配列変数の要素の扱いに重大なバグがある。すなわち使用できる要素の最大値の配列変数に０以外を代入した場合に、セーブロードに支障をきたすため、以下でたとえば最大1000まで使用できるとされている場合、仕様においては本来要素0から999まで使用できるはずなのに、実際には要素0から998までしか使用できない。
　こちらでは非キャラクター数値変数でなおかつeramakerで使える変数のみを扱う。
　eramakerで使える文字列変数およびキャラクター変数についてはその2を、Emuera専用変数についてはその3を見てほしい。

    Ａ～Ｚ
    COUNT
    RESULT
    DAY
    TIME
    MONEY
    MASTER
    TARGET
    ASSI
    PLAYER
    ASSIPLAY
    SELECTCOM
    PREVCOM
    NEXTCOM
    LOSEBASE
    UP,DOWN
    PALAMLV
    EXPLV
    EJAC
    FLAG
    TFLAG
    ITEM,ITEMSALES
    BOUGHT
    NOITEM
    PBAND
    CHARANUM
    RAND


Ａ～Ｚ

　数値型一次元配列変数であり、通称一文字変数と呼ばれる。要素数はeramakerで最大1000（すなわち0～999）までであるが、要素数バグに注意すること。初期化タイミングは起動時ですべての要素に０が代入される。セーブされる変数である。Emueraにおいては最大要素数をVariableSize.csvで設定しなおすことができる。
　極めて便利なためか、特にeramakerバリアントでは多用される。使用するときは、これが「配列変数」であることを忘れないようにすべき。また、Emueraにおいてはなるべくこれにばかり頼らないで他の変数も併用し、見やすいコード作りを行うべき。
COUNT

　数値型一次元配列変数である。要素数はeramakerで最大1000（0～999,バグに注意）、初期化タイミングは起動時ですべての要素に０が代入される、またCOUNT:0においてはREPEAT文実行時に０が代入される。セーブされる変数である。Emueraにおいては最大要素数をVariableSize.csvで設定しなおすことができる。
　要素0のCOUNT(:0)について、REPEAT文においてカウンターとして強制的に利用される。しかし、要素1以降に関してはそういう利用はないただの数値変数である。EmueraみたいにFOR文のないeramakerにおいて、普通にループ構文を入れ子にしたいときのCOUNT:0退避用としてCOUNT:1以降を活用するのもいいかもしれない。
RESULT

　数値型一次元配列変数である。要素数はeramakerで最大1000（0～999,バグに注意）、初期化タイミングは起動時ですべての要素に０が代入される、またRETURN文実行時にRETURN文に添えられた数値がRESULT:0に代入されるが、RETURN文に添えられているのが変数や数式の場合はeramakerとEmueraでRETURN:0に代入される数値が違うことに注意すること。また、INPUT文において入力された数値がRESULT:0に代入される。さらに、Emueraにおいてさまざまな新規命令の実行に伴いRESULTに代入されることがある。セーブされる変数である。Emueraにおいては最大要素数をVariableSize.csvで設定しなおすことができる。
　上で説明されているとおり、色んな処理の結果においてRESULT:0（場合によってはRESULT:1以降も）は上書きされていくので、中の数値を保存したい場合にはそのつど、他の数値変数に代入していく必要がある。
DAY

　数値型一次元配列変数である。要素数はeramakerで最大1000（0～999,バグに注意）、初期化タイミングは起動時ですべての要素に０が代入される。セーブされる変数である。Emueraにおいては最大要素数をVariableSize.csvで設定しなおすことができる。
　ネーミングのとおり、日付に使われることを想定しているようだ。
TIME

　数値型一次元配列変数である。要素数はeramakerで最大1000（0～999,バグに注意）、初期化タイミングは起動時ですべての要素に０が代入される。セーブされる変数である。Emueraにおいては最大要素数をVariableSize.csvで設定しなおすことができる。
　ネーミングのとおり、時間に使われることを想定しているようだ。
MONEY

　数値型一次元配列変数である。要素数はeramakerで最大1000（0～999,バグに注意）、初期化タイミングは起動時ですべての要素に０が代入される。セーブされる変数である。Emueraにおいては最大要素数をVariableSize.csvで設定しなおすことができる。
　ネーミングのとおり、お金や財産に使われることを想定しているようだ。
MASTER

　数値型一次元配列変数である。要素数はeramakerで最大1000（0～999,バグに注意）、初期化タイミングは起動時ですべての要素に０が代入される。セーブされる変数である。Emueraにおいては最大要素数をVariableSize.csvで設定しなおすことができる。
　ネーミングのとおり、主人の登録キャラ番号を放り込んで、その登録キャラが主人であることを示すために使われることを想定しているようだ。
TARGET

　数値型一次元配列変数である。要素数はeramakerで最大1000（0～999,バグに注意）、初期化タイミングは起動時で要素0のものに1、それ以外のすべての要素に０が代入される。セーブされる変数である。Emueraにおいては最大要素数をVariableSize.csvで設定しなおすことができる。
　ネーミングのとおり、調教対象の登録キャラ番号を放り込んで、その登録キャラが調教対象であることを示すために使われることを想定しているようだ。
ASSI

　数値型一次元配列変数である。要素数はeramakerで最大1000（0～999,バグに注意）、初期化タイミングは起動時で要素0のものに-1、それ以外のすべての要素に０が代入される。セーブされる変数である。Emueraにおいては最大要素数をVariableSize.csvで設定しなおすことができる。
　ネーミングのとおり、助手の登録キャラ番号を放り込んで、その登録キャラが助手であることを示すために使われることを想定しているようだ。助手というシステムが不必要ならば無視すればいいだろう。
PLAYER

　数値型一次元配列変数である。要素数はeramakerで最大1000（0～999,バグに注意）、初期化タイミングは起動時ですべての要素に０が代入される。セーブされる変数である。Emueraにおいては最大要素数をVariableSize.csvで設定しなおすことができる。
　ネーミングのとおり、調教者の登録キャラ番号を放り込んで、その登録キャラが調教者であることを示すために使われることを想定しているようだ。なお、調教者が主人固定の場合、PLAYER=MASTERとしてもいいし、PLAYERを一切排除して、MASTERしか使用しないのもいいだろう。
ASSIPLAY

　数値型一次元配列変数である。要素数はeramakerで最大1000（0～999,バグに注意）、初期化タイミングは起動時ですべての要素に０が代入される、またBEGIN TRAIN時にASSIPLAY:0に０が代入される。セーブされる変数である。Emueraにおいては最大要素数をVariableSize.csvで設定しなおすことができる。
　ネーミングのとおり、助手が調教しているかどうか？ということを示している。面倒ならば調教者の指定をPLAYER変数に委ねてASSIPLAY変数を廃止するものいいし、ASSIPLAY変数を残してPLAYER変数を排除するのもいいだろう。
SELECTCOM

　数値型一次元配列変数である。要素数はeramakerで最大1000（0～999,バグに注意）、初期化タイミングは起動時ですべての要素に０が代入される、BEGIN TRAINにおいては初期化されないことに注意すること。セーブされる変数である。Emueraにおいては最大要素数をVariableSize.csvで設定しなおすことができる。
　ネーミングのとおり、どの調教コマンドを選んだのか？がSELECTCOM:0にTrain.csvの数値で代入されるが、ハードコードされた調教システムを使わないのならば、その辺もしっかりコーディングしなければならない。また、次の調教ターンになったときに後述のPREVCOM変数に自動的に中身が移動したりはしないことに注意すること。なお、SELECTCOM:1以降については、eramakerにおいては単なる数値変数でしかない。EmueraにおいてはCALLTRAIN命令において実行される予定の調教コマンドを示す役割がある。
PREVCOM

　数値型一次元配列変数である。要素数はeramakerで最大1000（0～999,バグに注意）、初期化タイミングは起動時ですべての要素に０が代入される、またBEGIN TRAIN時にPREVCOM:0に-1が代入される。セーブされる変数である。Emueraにおいては最大要素数をVariableSize.csvで設定しなおすことができる。
　ネーミングのとおり、ひとつ前の調教ターンに、どの調教コマンドが実行されたのか？がPREVCOM:0にTrain.csvの数値で代入されるということが想定されているが、そういう実装を行うためにはそのようにしっかりコーディングしなければならない。
NEXTCOM

　数値型一次元配列変数である。要素数はeramakerで最大1000（0～999,バグに注意）、初期化タイミングは起動時ですべての要素に０が代入される、またBEGIN TRAIN時にNEXTCOM:0に-1が代入される。セーブされる変数である。Emueraにおいては最大要素数をVariableSize.csvで設定しなおすことができる。
　ネーミングのとおり、ひとつ次の調教ターンに、どの調教コマンドが実行される予定なのか？がNEXTCOM:0にTrain.csvの数値で代入されていると、調教コマンド入力を省略してどの数値にあたり調教コマンドが実行されるという仕組みである。なお、調教システムをハードコードに依存していない場合にはこういう働きはないただの数値変数である。また、NEXTCOM:1以降には特に働きはない。
　なお、NEXTCOMの取り扱いには極めて慎重であるべきで、特にEmueraバリアントにおいてはこれを使わない方法を模索すべきである。とくに、これ以外のフラグの初期化やTRAIN中におけるeraの振る舞いを完璧に理解していない場合は、このNEXTCOMの存在は忘れるべきである。
LOSEBASE

　数値型一次元配列変数である。要素数はeramakerで最大1000（0～999,バグに注意）、初期化タイミングは起動時ですべての要素に０が代入される、またSHOW_USERCOM終了時にすべての要素に０が代入される。セーブされる変数である。Emueraにおいては最大要素数をVariableSize.csvで設定しなおすことができる。
　ネーミングでは、BASE値（基礎値）の調教ターン中の喪失数を入れておくことが想定されているようだが、実際にBASE値を操作するためのコードはちゃんと組んでおかないといけない。また、この変数はキャラクター変数ではないため、通常ならばTARGET専用として使うべきものであろう。
UP,DOWN

　数値型一次元配列変数である。要素数はeramakerで最大1000（0～999,バグに注意）、初期化タイミングは起動時ですべての要素に０が代入される、またSHOW_USERCOM終了時もしくはUPCHECK命令実行終了時にすべての要素に０が代入される。セーブされる変数である。Emueraにおいては最大要素数をVariableSize.csvで設定しなおすことができる。
　ネーミングでは分かりづらいが、UPはPALAM値（パラメータ）の調教ターン中の上昇値を入れておくことが想定されており、DOWNは下降値を入れておくことが想定されているようだ。PALAMとの実際の操作のためには専用命令UPCHECKが用意されているが、全PALAMにおいて行われる上に、その結果が必ず表示されるなど融通が利かないため、それを嫌うならばその部分を自分でコーディングすることも考慮すべきであろう。また、これらの変数はキャラクター変数ではないため、通常ならばTARGET専用として使うべきものであろう。
PALAMLV

　数値型一次元配列変数である。要素数はeramakerで最大1000（0～999,バグに注意）、初期化タイミングは起動時に特定のレベル（要素）までに特定の数値、それ以上のすべての要素に０が代入される。また、Emueraにおいては、_Replace.csvで初期値設定が可能である。セーブされる変数である。Emueraにおいては最大要素数をVariableSize.csvで設定しなおすことができる。
　ネーミングのとおり、PALAM値（パラメータ）をレベルごとに仕切る閾値を表すことを想定している。なお、普通のとおり代入可能な変数であることは覚えておくと便利かもしれない。
EXPLV

　数値型一次元配列変数である。要素数はeramakerで最大1000（0～999,バグに注意）、初期化タイミングは起動時に特定のレベル（要素）までに特定の数値、それ以上のすべての要素に０が代入される。また、Emueraにおいては、_Replace.csvで初期値設定が可能である。セーブされる変数である。Emueraにおいては最大要素数をVariableSize.csvで設定しなおすことができる。
　ネーミングのとおり、EXP値（経験値）をレベルごとに仕切る閾値を表すことを想定している。なお、普通のとおり代入可能な変数であることは覚えておくと便利かもしれない。
EJAC

　数値型一次元配列変数である。要素数はeramakerで最大1000（0～999,バグに注意）、初期化タイミングは起動時に要素0のものに10000、それ以外のすべての要素に０が代入される。セーブされる変数である。Emueraにおいては最大要素数をVariableSize.csvで設定しなおすことができる。
　ネーミングからは分かりづらいが、射精に関する処理に使われることを想定しているようだ。
FLAG

　数値型一次元配列変数である。要素数はeramakerで最大10000（0～9999,バグに注意）、初期化タイミングは起動時にすべての要素に０が代入される。セーブされる変数である。Emueraにおいては最大要素数をVariableSize.csvで設定しなおすことができる。
　特定のキャラクターに依存しないさまざまなゲーム上のフラグを扱うとても重要な変数である。
TFLAG

　数値型一次元配列変数である。要素数はeramakerで最大1000（0～999,バグに注意）、初期化タイミングは起動時にすべての要素に０が代入される、またBEGIN TRAINの時にもすべての要素に０が代入される。セーブされる変数である。Emueraにおいては最大要素数をVariableSize.csvで設定しなおすことができる。
　特定のキャラクターに依存しないさまざまなゲーム上のフラグを扱うとても重要な変数である。こっちは調教開始時（注意、調教ターンの進行および調教終了時にはクリアされない）にクリアされる利点を生かした使われ方がされることが多い。
ITEM,ITEMSALES

　数値型一次元配列変数である。要素数はeramakerで最大1000（0～999,バグに注意）、初期化タイミングは起動時にすべての要素に０が代入される。セーブされる変数である。Emueraにおいては最大要素数をVariableSize.csvで設定しなおすことができる。
　いずれも、アイテム関連の処理に使われる数値変数である。ITEMの方は、そのアイテムを所有しているかどうか？を、ITEMSALESの方はそのアイテムが販売されているかどうか？をあらわすことを想定しているようだ。なお、eramakerにおいては、ITEM:0～ITEM:99までのアイテムは販売可能な場合は、SHOP画面に陳列されるが、それ以上の数値のITEMに関してはそのようにコーディングしないと陳列されない。Emueraにおいては、それについて設定が可能になっている。という風に、同じITEMであっても、番号により扱いが異なるので注意すべきだし、そもそもSHOP画面絡みをハードコードに頼らない手法も存在する。
BOUGHT

　数値型一次元配列変数である。要素数はeramakerで最大1000（0～999,バグに注意）、初期化タイミングは起動時にすべての要素に０が代入される。セーブされる変数である。Emueraにおいては最大要素数をVariableSize.csvで設定しなおすことができる。
　アイテム購入関連の処理に使われることを想定されたものであろう。SHOPにおいてアイテムを購入した場合、購入されたアイテムのITEM数値（ITEM.CSV依存）がBOUGHT:0に代入されるのである。なお、BOUGHT:1以降には特に働きはない。
NOITEM

　数値型一次元配列変数である。要素数はeramakerで最大1000（0～999,バグに注意）、初期化タイミングは起動時にすべての要素に０が代入される。また、Emueraにおいては、GAMEBASE.CSVで初期値設定が可能である。セーブされる変数である。Emueraにおいては最大要素数をVariableSize.csvで設定しなおすことができる。
　このフラグを使うことにより、調教アイテムが必要な場面においてアイテムがなくてもプレイできようになるということを想定したものだとのことであるが、正直よく分からない人も多いだろう。いずれにせよ、こういう数値変数もあるということである。
PBAND

　数値型一次元配列変数である。要素数はeramakerで最大1000（0～999,バグに注意）、初期化タイミングは起動時に要素0のものに4、それ以外のすべての要素に０が代入される。セーブされる変数である。Emueraにおいては最大要素数をVariableSize.csvで設定しなおすことができる。
　ITEM番号4がペニスバンドである場合において、ペニスバンドに関するさまざまな判定などをやりやすくすることを想定した（たとえば、SIF ITEM:PBAND　で　もしペニスバンド購入済みならば～）変数であるらしい。いずれにせよ、こういう数値変数もあるということである。
CHARANUM

　数値型擬似一次元配列変数である。要素数はeramakerで最大1000（0～999,バグに注意）、初期化タイミングは起動時にすべての要素に０が代入されるが、その後すべての要素に登録キャラ数（主人含む）が逐次代入される。セーブされる変数である。
　eramakerにおいては代入することがなぜか可能であるが、Emueraにおいては代入禁止でありエラーを出すので注意すること。さらに、Emueraの場合にはCHARANUM:0とか要素数を記述するだけでエラーを出すというeramakerとは異なる振る舞いをするので注意すること。
RAND

　数値型擬似一次元配列変数である。要素数はeramakerで最大1000（0～999,バグに注意）、初期化タイミングは起動時にすべての要素に０が代入されるらしいが、その後は利用するたびに乱数を発生させる。セーブされる変数である。
　eramakerにおいては代入することがなぜか可能であるが、Emueraにおいては代入禁止でありエラーを出すので注意すること。
　また、eramakerにおいては、RAND:0とするとかならず０を返すが、Emueraにおいてはエラーで落ちるので注意すること。

seesaawiki.jp
変数一覧（Emueraとeramaker1）その２ - eratohoまとめ V3
7–9 分

　このページに記してあることは実はeramaker変数情報や、eramakerまとめWikiや本家サイトの「改変のための情報」やEmueraWikiなどに記述されていることの一部をまとめたものに過ぎない。よって既に知っているひとには目新しい記述はないので注意のこと。なおeramaker2はここでは取り扱わない。それは変数的にはeramaker1とは互換性はない（もちろん互換性に配慮はされてはいるが）、またここでのEmueraは現状での最新私家版1738eに準じている。
　また、eramaker1は配列変数の要素の扱いに重大なバグがある。すなわち使用できる要素の最大値の配列変数に０以外を代入した場合に、セーブロードに支障をきたすため、以下でたとえば最大1000まで使用できるとされている場合、仕様においては本来要素0から999まで使用できるはずなのに、実際には要素0から998までしか使用できない。
　こちらにおいては、eramakerでも使える文字列変数およびキャラクター変数について扱う。
　eramakerでも使える非キャラクターの数値変数に関してはその1を、Emuera専用変数に関してはその3を見てほしい。

    RESULTS
    SAVESTR
    ABLNAME
    TALENTNAME
    EXPNAME
    MARKNAME
    PALAMNAME
    ITEMNAME
    STR
    NO
    ISASSI
    NAME
    CALLNAME
    BASE
    MAXBASE
    ABL
    TALENT
    EXP
    MARK
    RELATION
    JUEL
    CFLAG
    EQUIP
    TEQUIP
    PALAM
    STAIN
    EX
    NOWEX
    SOURCE
    GOTJUEL


RESULTS

　文字列型一次元配列変数である。要素数はeramakerで最大100（0～99,バグに注意）、初期化タイミングは起動時ですべての要素に空文字列が代入される、また、INPUTS文において入力された文字列がRESULTS:0に代入される。さらに、Emueraにおいてさまざまな新規命令の実行に伴いRESULTSに代入されることがある。セーブされない変数である。Emueraにおいては最大要素数をVariableSize.csvで設定しなおすことができる。
　上で説明されているとおり、色んな処理の結果においてRESULTS:0（場合によってはRESULTS:1～）は上書きされていくので、中の数値を保存したい場合にはそのつど、他の文字列変数に代入していく必要があるが、eramakerは文字列変数の扱いが難しいので注意のこと。
SAVESTR

　文字列型一次元配列変数である。要素数はeramakerで最大100（0～99,バグに注意）、初期化タイミングは起動時ですべての要素に空文字列が代入される。セーブされる変数である。Emueraにおいては最大要素数をVariableSize.csvで設定しなおすことができる。
　eramakerにおいては、セーブされる数少ない文字列変数であるので、場合によってはこのフラグの争奪戦になる可能性があるので注意すること。
ABLNAME

　文字列型一次元配列変数である。要素数はeramakerで最大100（0～99,バグに注意）、初期化タイミングは起動時でABL.CSVで設定された通りに文字列が代入される。セーブされない変数である。Emueraにおいては最大要素数はABL変数のそれに連動する。
　ABL（能力）の名称が入っている。ERBにおいて代入することができないのに注意してほしい。
TALENTNAME

　文字列型一次元配列変数である。要素数はeramakerで最大1000（0～999,バグに注意）、初期化タイミングは起動時でTALENT.CSVで設定された通りに文字列が代入される。セーブされない変数である。Emueraにおいては最大要素数はTALENT変数のそれに連動する。
　TALENT（素質）の名称が入っている。ERBにおいて代入することができないのに注意してほしい。
EXPNAME

　文字列型一次元配列変数である。要素数はeramakerで最大100（0～99,バグに注意）、初期化タイミングは起動時でEXP.CSVで設定された通りに文字列が代入される。セーブされない変数である。Emueraにおいては最大要素数はEXP変数のそれに連動する。
　EXP（経験）の名称が入っている。ERBにおいて代入することができないのに注意してほしい。
MARKNAME

　文字列型一次元配列変数である。要素数はeramakerで最大100（0～99,バグに注意）、初期化タイミングは起動時でMARK.CSVで設定された通りに文字列が代入される。セーブされない変数である。Emueraにおいては最大要素数はMARK変数のそれに連動する。
　MARK（刻印）の名称が入っている。ERBにおいて代入することができないのに注意してほしい。
PALAMNAME

　文字列型一次元配列変数である。要素数はeramakerで最大200（0～199,バグに注意）、初期化タイミングは起動時でPALAM.CSVで設定された通りに文字列が代入される。セーブされない変数である。Emueraにおいては最大要素数はPALAM変数のそれに連動する。
　PALAM（パラメータ）の名称が入っている。ERBにおいて代入することができないのに注意してほしい。
ITEMNAME

　文字列型一次元配列変数である。要素数はeramakerで最大1000（0～999,バグに注意）、初期化タイミングは起動時でITEM.CSVで設定された通りに文字列が代入される。セーブされない変数である。Emueraにおいては最大要素数はITEM変数のそれに連動する。
　ITEM（アイテム）の名称が入っている。ERBにおいて代入することができないのに注意してほしい。
STR

　文字列型一次元配列変数である。要素数はeramakerで最大20000（0～19999,バグに注意）、初期化タイミングは起動時でSTR.CSVで設定された通りに文字列が代入される。セーブされない変数である。Emueraにおいては最大要素数をVariableSize.csvで設定しなおすことができる。
　こっちは、ERBにおいて代入することができるようになっている。文字列を扱う変数が不足気味のeramakerにおいてはこの変数もまた貴重である。
NO

　数値型キャラクター一次元配列変数である。セーブされる変数である。
　登録キャラクターのキャラクター番号がCHARA**.CSVより代入される。しかし、代入もできる。
ISASSI

　数値型キャラクター一次元配列変数である。セーブされる変数である。
　その登録キャラクターが助手をしたことがあるかどうかを入れておくことが想定されている。もちろん、それを無視してもいい。
NAME

　文字列型キャラクター一次元配列変数である。セーブされる変数である。
　登録キャラクターの名前がCHARA**.CSVより代入される。eramakerにおいては代入できないが、Emueraにおいては代入できる。
CALLNAME

　文字列型キャラクター一次元配列変数である。セーブされる変数である。
　登録キャラクターの呼び名がCHARA**.CSVより代入される。eramakerにおいては代入できないが、Emueraにおいては代入できる。なお、名前と呼び名の違いに関しては作り手の裁量しだいである。
BASE

　数値型キャラクター二次元配列変数である。要素数はeramakerで最大100（0～99,バグに注意）。セーブされる変数である。Emueraにおいては最大要素数をVariableSize.csvで設定しなおすことができる。
　登録キャラクターのBASE値（基礎：体力や気力など）がCHARA**.CSVより代入される。BASE値が一定以下になったときの死亡処理などは当然そういう処理をコーディングしなけばならないだろう。
MAXBASE

　数値型キャラクター二次元配列変数である。要素数はeramakerで最大100（0～99,バグに注意）。セーブされる変数である。Emueraにおいては最大要素数をVariableSize.csvで設定しなおすことができる。
　登録キャラクターのMAXBASE値（最大基礎：最大体力や最大気力など）がCHARA**.CSVより代入される。MAXBASE値がBASE値を越えた場合の補正処理は、そういう処理をコーディングしなけば自動的には行われないことに注意すること。
ABL

　数値型キャラクター二次元配列変数である。要素数はeramakerで最大100（0～99,バグに注意）。セーブされる変数である。Emueraにおいては最大要素数をVariableSize.csvで設定しなおすことができる。
　登録キャラクターのABL値（能力：従順や自慰中毒など）がCHARA**.CSVより代入される。
TALENT

　数値型キャラクター二次元配列変数である。要素数はeramakerで最大1000（0～999,バグに注意）。セーブされる変数である。Emueraにおいては最大要素数をVariableSize.csvで設定しなおすことができる。
　登録キャラクターのTALENT値（素質：処女や恋慕など）がCHARA**.CSVより代入されるが、eramakerにおいては0か1しか代入できないことに注意すること。eramakerにおいてTALENT値にそれ以外の数値を使いたい場合には、ERBにおいて改めて代入処理を作らなければならない。
EXP

　数値型キャラクター二次元配列変数である。要素数はeramakerで最大100（0～99,バグに注意）。セーブされる変数である。Emueraにおいては最大要素数をVariableSize.csvで設定しなおすことができる。
　登録キャラクターのEXP値（経験：V経験や射精経験など）がCHARA**.CSVより代入される。
MARK

　数値型キャラクター二次元配列変数である。要素数はeramakerで最大100（0～99,バグに注意）。セーブされる変数である。Emueraにおいては最大要素数をVariableSize.csvで設定しなおすことができる。
　登録キャラクターのMARK値（刻印：屈服刻印や反発刻印など）がCHARA**.CSVより代入される。
RELATION

　数値型キャラクター二次元配列変数である。要素数はeramakerで最大100（0～99,バグに注意）。セーブされる変数である。Emueraにおいては最大要素数をVariableSize.csvで設定しなおすことができる。
　登録キャラクターのRELATION値（相性：値の数値のキャラクター番号との相性の良さ）がCHARA**.CSVより代入される。なお、この数値が0であることと、100であることを同じように扱うように処理することが主流であると思われる。
JUEL

　数値型キャラクター二次元配列変数である。要素数はeramakerで最大200（0～199,バグに注意）。セーブされる変数である。Emueraにおいては最大要素数をVariableSize.csvで設定しなおすことができる。
　登録キャラクターのJUEL値（宝珠の数：快Cの珠や屈服の珠）が代入されることになる。ただし、これはeramakerにおいてはCHARA**.CSVにおいて設定することはできない。Emueraにおいては、「JUEL,*,**」もしくは「珠,*,**」の形式でCHARA**.CSVで設定すれば初期値として代入される。これに対応するJUELNAMEというのは存在しない。JUEL.CSVはeramakerもEmueraも読まないことに注意すること。
CFLAG

　数値型キャラクター二次元配列変数である。要素数はeramakerで最大1000（0～999,バグに注意）。セーブされる変数である。Emueraにおいては最大要素数をVariableSize.csvで設定しなおすことができる。
　登録キャラクターのさまざまな数値フラグとして活用される極めて重要な変数である。「フラグ,*,**」という形式でCHARA**.CSVにおいて初期値を設定することもできる。
　いずれにせよ、このフラグの奪い合いはera世界での日常である。
EQUIP

　数値型キャラクター二次元配列変数である。要素数はeramakerで最大100（0～99,バグに注意）。セーブされる変数である。Emuera専用変数ではなくて、eramakerでも利用できる。Emueraにおいては最大要素数をVariableSize.csvで設定しなおすことができる。
　登録キャラクターの装着品が代入されることが想定されている。ただし、これはeramakerにおいてはCHARA**.CSVにおいて設定することはできない。Emueraにおいては、「EQUIP,*,**」もしくは「装着物,*,**」の形式でCHARA**.CSVで設定すれば初期値として代入される。
TEQUIP

　数値型キャラクター二次元配列変数である。要素数はeramakerで最大100（0～99,バグに注意）。BEGIN TRAINにおいて、全要素に０が代入される。セーブされる変数である。Emueraにおいては最大要素数をVariableSize.csvで設定しなおすことができる。
　登録キャラクターの調教中の装着品が代入されることが想定されている。CHARA**.CSVにおいて初期値を設定することはできない。
PALAM

　数値型キャラクター二次元配列変数である。要素数はeramakerで最大100（0～99,バグに注意）。BEGIN TRAINにおいて、全要素に０が代入される。セーブされる変数である。Emueraにおいては最大要素数をVariableSize.csvで設定しなおすことができる。
　登録キャラクターの調教中のパラメータが代入されることが想定されている。CHARA**.CSVにおいて初期値を設定することはできない。
STAIN

　数値型キャラクター二次元配列変数である。要素数はeramakerで最大100（0～99,バグに注意）。BEGIN TRAINにおいて、特定の要素に特定の数値が代入される。また、Emueraにおいては、_Replace.csvで初期値設定が可能である。セーブされる変数である。Emueraにおいては最大要素数をVariableSize.csvで設定しなおすことができる。
　登録キャラクターの調教中の汚れの状況が代入されることが想定されている。CHARA**.CSVにおいて初期値を設定することはできない。また、基本的にビット演算を使うべきかもしれないので注意すること。
EX

　数値型キャラクター二次元配列変数である。要素数はeramakerで最大100（0～99,バグに注意）。BEGIN TRAINにおいて、全要素に０が代入される。セーブされる変数である。Emueraにおいては最大要素数をVariableSize.csvで設定しなおすことができる。
　登録キャラクターの調教中の絶頂回数が代入されることが想定されている。CHARA**.CSVにおいて初期値を設定することはできない。
NOWEX

　数値型キャラクター二次元配列変数である。要素数はeramakerで最大100（0～99,バグに注意）。@EVENTCOM直前において、全要素に０が代入される。セーブされる変数である。Emueraにおいては最大要素数をVariableSize.csvで設定しなおすことができる。
　登録キャラクターの調教中のその調教ターンの間だけの絶頂回数が代入されることが想定されている。CHARA**.CSVにおいて初期値を設定することはできない。
SOURCE

　数値型キャラクター二次元配列変数である。要素数はeramakerで最大100（0～99,バグに注意）。BEGIN TRAINおよび@SOURCE_CHECK終了時において、全要素に０が代入される。セーブされる変数である。Emueraにおいては最大要素数をVariableSize.csvで設定しなおすことができる。
　登録キャラクターの調教中のその調教ターンの入手調教ソースが代入されることが想定されている。CHARA**.CSVにおいて初期値を設定することはできない。また、入手調教ソースをパラメータ増減に反映させるためにはそのようにコーディングしなければならないことに注意のこと。
GOTJUEL

　数値型キャラクター二次元配列変数である。要素数はeramakerで最大200（0～199,バグに注意）。BEGIN TRAINにおいて、全要素に０が代入される。セーブされる変数である。Emueraにおいては最大要素数をVariableSize.csvで設定しなおすことができる。
　登録キャラクターのその調教中に入手できる宝珠の数が代入されることが想定されている。CHARA**.CSVにおいて初期値を設定することはできない。また、宝珠を実際にJUEL変数に代入させるためにはそのようにコーディングしなければならないことに注意のこと。

変数一覧（Emueraとeramaker1）その３ - eratohoまとめ V3
7–9 分

　このページに記してあることは実はeramaker変数情報や、eramakerまとめWikiや本家サイトの「改変のための情報」やEmueraWikiなどに記述されていることの一部をまとめたものに過ぎない。よって既に知っているひとには目新しい記述はないので注意のこと。なおeramaker2はここでは取り扱わない。それは変数的にはeramaker1とは互換性はない（もちろん互換性に配慮はされてはいるが）、またここでのEmueraは現状での最新私家版1738eに準じている。
　こちらにおいては、Emuera追加変数について扱う。
　eramakerでも使える非キャラクターの数値変数に関してはその1を、eramakerでも使える文字列変数およびキャラクター変数に関してはその2を見てほしい。

    NICKNAME
    MASTERNAME
    DOWNBASE
    CUP,CDOWN
    TCVAR
    CSTR
    TSTR
    ITEMPRICE
    TRAINNAME
    BASENAME
    SOURCENAME
    EXNAME
    EQUIPNAME
    TEQUIPNAME
    FLAGNAME
    TFLAGNAME
    TCVARNAME
    DITEMTYPE,DA～DE
    TA, TB
    GAMEBASE_AUTHOR
    GAMEBASE_INFO
    GAMEBASE_YEAR
    GAMEBASE_TITLE
    GAMEBASE_GAMECODE
    GAMEBASE_VERSION
    GAMEBASE_ALLOWVERSION
    GAMEBASE_DEFAULTCHARA
    GAMEBASE_NOITEM
    LASTLOAD_VERSION
    LASTLOAD_NO
    LASTLOAD_TEXT
    SAVEDATA_TEXT
    LOCAL
    LOCALS
    ARG
    ARGS
    GLOBAL
    GLOBALS


NICKNAME

　文字列型キャラクター一次元配列変数である。セーブされる変数である。
　登録キャラクターのあだ名がCHARA**.CSVより「NICKNAME,**」もしくは「あだ名,%%」の形式で代入させることができる。ERBによる代入も可能である。
MASTERNAME

　文字列型キャラクター一次元配列変数である。セーブされる変数である。
　登録キャラクターが主人をどう呼称するかがCHARA**.CSVより「MASTERNAME,**」もしくは「主人の呼び方,**」の形式で代入させることができる。ERBによる代入も可能である。
DOWNBASE

　数値型キャラクター二次元配列変数である。初期化タイミングは起動時ですべての要素に０が代入される、またSHOW_USERCOM終了時にすべての要素に０が代入される。セーブされる変数である。最大要素数をVariableSize.csvで設定しなおすことができる。
　非キャラクター変数であったLOSEBASEのキャラクター変数版であり、これの導入によりEmueraにおいてより多人数調教システムの構築が容易になるだろうと思われる。ただし、LOSEBASE同様に、実際にBASE値からDOWNBASE値を差し引く処理は自作する必要がある。
CUP,CDOWN

　数値型キャラクター二次元配列変数である。初期化タイミングは起動時ですべての要素に０が代入される、またSHOW_USERCOM終了時もしくはCUPCHECK命令実行終了時にすべての要素に０が代入される。セーブされる変数である。最大要素数をVariableSize.csvで設定しなおすことができる。
　CUPはUPの、CDOWNはDOWNのキャラクター変数版であり、CUPはPALAM値（パラメータ）の調教ターン中の上昇値を入れておくことが想定されており、CDOWNは下降値を入れておくことが想定されている。PALAMとの実際の操作のためには専用命令CUPCHECKが用意されているが、融通が利かないため、それを嫌うならばその部分を自分でコーディングすることも考慮すべきであろう。
TCVAR

　数値型キャラクター二次元配列変数である。BEGIN TRAINの時に全要素に０が代入される。セーブされる変数である。は最大要素数をVariableSize.csvで設定しなおすことができる。
　TFLAGのキャラクター変数版として登場した便利な数値変数である。ぜひ活用しよう。
CSTR

　文字列型キャラクター二次元配列変数である。セーブされる変数である。最大要素数をVariableSize.csvで設定しなおすことができる。
　登録キャラクターのCSTR値（なんらかの文字列）がCHARA**.CSVより「CSTR,*,**」の形式により代入させることができる。
TSTR

　文字列型一次元配列変数である。初期化タイミングは起動時で全要素に空文字列が代入される、またBEGIN TRAINの時に全要素に空文字列が代入される。セーブされる変数である(EmueraWikiではされないとなっているが、TFLAGのSTR版とされているので、セーブされるのが仕様で良いはず)。最大要素数をVariableSize.csvで設定しなおすことができる。
ITEMPRICE

　数値型一次元配列変数である。初期化タイミングは起動時でITEM.CSVで設定された通りに値段が数値として代入される。セーブされない変数である。最大要素数はITEM変数のそれに連動する。
　ERBによっては代入できないので注意すること。eramakerにはこの変数は存在しない。
TRAINNAME

　文字列型一次元配列変数である。初期化タイミングは起動時でTRAIN.CSVで設定された通りに文字列が代入される。セーブされない変数である。最大要素数はTRAIN変数のそれに連動する。
　TRAIN（調教）の名称が入っている。ERBにおいて代入することができないのに注意してほしい。
BASENAME

　文字列型一次元配列変数である。初期化タイミングは起動時でBASE.CSVで設定された通りに文字列が代入される。セーブされない変数である。最大要素数はBASE変数のそれに連動する。
　BASE（基礎）の名称が入っている。ERBにおいて代入することができないのに注意してほしい。
SOURCENAME

　文字列型一次元配列変数である。初期化タイミングは起動時でSOURCE.CSVで設定された通りに文字列が代入される。セーブされない変数である。最大要素数はSOURCE変数のそれに連動する。
　SOURCE（調教ソース）の名称が入っている。ERBにおいて代入することができないのに注意してほしい。
EXNAME

　文字列型一次元配列変数である。初期化タイミングは起動時でEX.CSVで設定された通りに文字列が代入される。セーブされない変数である。最大要素数はEX変数のそれに連動する。
　EX（絶頂）の名称が入っている。ERBにおいて代入することができないのに注意してほしい。
EQUIPNAME

　文字列型一次元配列変数である。初期化タイミングは起動時でEQUIP.CSVで設定された通りに文字列が代入される。セーブされない変数である。最大要素数はEQUIP変数のそれに連動する。
　EQUIPの名称が入っている。ERBにおいて代入することができないのに注意してほしい。
TEQUIPNAME

　文字列型一次元配列変数である。初期化タイミングは起動時でTEQUIP.CSVで設定された通りに文字列が代入される。セーブされない変数である。最大要素数はTEQUIP変数のそれに連動する。
　TEQUIPの名称が入っている。ERBにおいて代入することができないのに注意してほしい。
FLAGNAME

　文字列型一次元配列変数である。初期化タイミングは起動時でFLAG.CSVで設定された通りに文字列が代入される。セーブされない変数である。最大要素数はFLAG変数のそれに連動する。
　FLAGの名称が入っている。ERBにおいて代入することができないのに注意してほしい。
TFLAGNAME

　文字列型一次元配列変数である。初期化タイミングは起動時でTFLAG.CSVで設定された通りに文字列が代入される。セーブされない変数である。最大要素数はTFLAG変数のそれに連動する。
　TFLAGの名称が入っている。ERBにおいて代入することができないのに注意してほしい。
TCVARNAME

　文字列型一次元配列変数である。初期化タイミングは起動時でTCVAR.CSVで設定された通りに文字列が代入される。セーブされない変数である。最大要素数はTCVAR変数のそれに連動する。
　TCVARの名称が入っている。ERBにおいて代入することができないのに注意してほしい。
DITEMTYPE,DA～DE

　数値型二次元配列変数である。キャラクター変数ではないので注意すること。初期化タイミングは起動時で全要素に０が代入される。セーブされる変数である。最大要素数をVariableSize.csvで設定しなおすことができる。
TA, TB

　数値型三次元配列変数である。初期化タイミングは起動時で全要素に０が代入される。セーブされる変数である。最大要素数をVariableSize.csvで設定しなおすことができるが、100万を越える要素数になるサイズ以上にすることはできない。
GAMEBASE_AUTHOR

　文字列型非配列変数である。初期化タイミングは起動時でGAMEBASE.CSVより文字列が代入される。セーブされない変数である。ERBにより代入はできない。ゲーム作者の名前が入っていることが想定されている。ゲーム開始時に表示される。
GAMEBASE_INFO

　文字列型非配列変数である。初期化タイミングは起動時でGAMEBASE.CSVより文字列が代入される。セーブされない変数である。ERBにより代入はできない。ゲームに関する追加情報が入っていることが想定されている。ゲーム開始時に表示される。
GAMEBASE_YEAR

　文字列型非配列変数である。初期化タイミングは起動時でGAMEBASE.CSVより文字列が代入される。セーブされない変数である。ERBにより代入はできない。ゲームの製作年が入っていることが想定されているが数値型ではないことに注意のこと。ゲーム開始時に表示される。
GAMEBASE_TITLE

　文字列型非配列変数である。初期化タイミングは起動時でGAMEBASE.CSVより文字列が代入される。セーブされない変数である。ERBにより代入はできない。ゲームタイトルが入っていることが想定されている。ゲーム開始時に表示される。
GAMEBASE_GAMECODE

　数値型非配列変数である。初期化タイミングは起動時でGAMEBASE.CSVより数値が代入される。セーブされない変数である。ERBにより代入はできない。このゲーム（バリアント）のゲームコードの数値が入っている。これはこのゲームを他のeraバリアントから区別するために必要であり、セーブロードの可不可を決める基準のひとつである。
GAMEBASE_VERSION

　数値型非配列変数である。初期化タイミングは起動時でGAMEBASE.CSVより数値が代入される。セーブされない変数である。ERBにより代入はできない。このゲームのバージョンの数値が入っている。セーブロードの可不可を決める基準のひとつである。
GAMEBASE_ALLOWVERSION

　数値型非配列変数である。初期化タイミングは起動時でGAMEBASE.CSVより数値が代入される。セーブされない変数である。ERBにより代入はできない。データのロードにおいて、どのバージョンの数値までのデータの読み込みを許可するのかの閾値が入っている。
GAMEBASE_DEFAULTCHARA

　数値型非配列変数である。初期化タイミングは起動時でGAMEBASE.CSVより数値が代入される。セーブされない変数である。ERBにより代入はできない。起動時に最初から存在しているキャラクターのキャラクター番号が入っている。
GAMEBASE_NOITEM

　数値型非配列変数である。初期化タイミングは起動時でGAMEBASE.CSVより数値が代入される。セーブされない変数である。ERBにより代入はできない。NOITEMの初期値が入っている。
LASTLOAD_VERSION

　数値型非配列変数である。初期化タイミングは起動時もしくはRESETDATA命令実行時もしくはゲームメニューにおいて「タイトルに戻る」が実行されたときに-1が代入される。セーブされない変数である。ERBにより代入はできない。最後にロードしたデータのバージョン（gamebase.csvで定義する値）が入る変数である。

LASTLOAD_NO

　数値型非配列変数である。初期化タイミングは起動時もしくはRESETDATA命令実行時もしくはゲームメニューにおいて「タイトルに戻る」が実行されたときに-1が代入される。セーブされない変数である。ERBにより代入はできない。最後にロードしたデータの番号（SAVE*.SAVの*に相当する値）が入る変数である。
LASTLOAD_TEXT

　文字列型非配列変数である。初期化タイミングは起動時もしくはRESETDATA命令実行時もしくはゲームメニューにおいて「タイトルに戻る」が実行されたときに空文字列が代入される。セーブされない変数である。ERBにより代入はできない。最後にロードしたデータの情報（SAVEDATA_TEXTに相当する文字列）が入る変数である。
SAVEDATA_TEXT

　文字列型非配列変数である。セーブデータに保存され、セーブおよびロード画面で表示されるテキストである。ERBによる代入も可能である。
　なお、@SAVEINFOが呼ばれる時に、現在時刻を表す文字列が代入される。またそこからPUTFORM命令で追記することができる。SAVEGAME命令とPUTFORM命令を使わない（SAVELOAD.ERBを使う場合）にはこの変数を操作する意味はない。
LOCAL

　ローカル数値型一次元配列変数である。セーブされない変数である。最大要素数をVariableSize.csvで設定しなおすことができる。
　関数ごとに用意できるローカル変数である。なお、イベント関数においても同名関数ならばローカル変数は共用であることに注意してほしい。
　LOCAL@関数名という形式で他の関数からも参照や代入は可能であるが、デバッグ用機能であり今後廃止される可能性があるので注意のこと。
LOCALS

　ローカル文字列型一次元配列変数である。セーブされない変数である。最大要素数をVariableSize.csvで設定しなおすことができる。
　関数ごとに用意できるローカル変数である。なお、イベント関数においても同名関数ならばローカル変数は共用であることに注意してほしい。
　LOCALS@関数名という形式で他の関数からも参照や代入は可能であるが、デバッグ用機能であり今後廃止される可能性があるので注意のこと。
ARG

　ローカル数値型一次元配列変数である。セーブされない変数である。最大要素数をVariableSize.csvで設定しなおすことができる。
　関数ごとに用意できるローカル変数である。こちらは、関数呼び出しのときの引数としての使用が想定されており、そういう利用が推奨される。
　ARG@関数名という形式で他の関数からも参照や代入は可能であるが、デバッグ用機能であり今後廃止される可能性があるので注意のこと。
ARGS

　ローカル文字列型一次元配列変数である。セーブされない変数である。最大要素数をVariableSize.csvで設定しなおすことができる。
　関数ごとに用意できるローカル変数である。こちらは、関数呼び出しのときの引数としての使用が想定されており、そういう利用が推奨される。
　ARGS@関数名という形式で他の関数からも参照や代入は可能であるが、デバッグ用機能であり今後廃止される可能性があるので注意のこと。
GLOBAL

　グローバル数値型一次元配列変数である。通常の方法ではセーブされない変数であるが、SAVEGLOBAL命令によりセーブでき、LOADGLOBAL命令によりロードできる。最大要素数をVariableSize.csvで設定しなおすことができる。
　すべてのセーブデータで共用されることを想定した数値変数である。
GLOBALS

　グローバル文字列型一次元配列変数である通常の方法ではセーブされない変数であるが、SAVEGLOBAL命令によりセーブでき、LOADGLOBAL命令によりロードできる。最大要素数をVariableSize.csvで設定しなおすことができる。
　すべてのセーブデータで共用されることを想定した文字列変数である。
